---
# Wait for one instance to be reachable via 22
- name: "Wait for host to be up"
  hosts: localhost
  gather_facts: True
  check_mode: no
  tasks:
    - local_action: wait_for port=22 host="{{ host }}" search_regex=OpenSSH delay=10

# Prepare the instances
- name: "Setup disks on all the hosts"
  hosts: tscluster
  gather_facts: false
  become: true
  become_user: admin
  tasks:
    - name: Wait for system to become reachable
      wait_for_connection:
        timeout: 5
    - name: "Setup disks"
      shell: "/usr/local/scaligent/bin/prepare_disks.sh"
      become: yes
      become_user: root


# Prepare the provisioned instances and install root fs
- name: "Configure the instance with ThoughtSpot"
  hosts: tsinstall
  gather_facts: false
  become: true
  become_user: admin
  tasks:
    # - name: "Setup disks"
    #   shell: "/usr/local/scaligent/bin/prepare_disks.sh"
    - name: "Create release binary directory"
      file:
        path: /export/release_tar
        state: directory
        owner: admin
        group: admin
    - name: "Copy release tarball"
      copy:
        src: "{{ release_loc }}/{{ release }}.tar.gz"
        dest: /export/release_tar
        owner: admin
        group: admin
        mode: preserve
    - name: "Copy release md5"
      copy:
        src: "{{ release_loc }}/{{ release }}.tar.gz.MD5checksum"
        dest: /export/release_tar
        owner: admin
        group: admin
        mode: preserve
    - name: "Copy installation input file"
      copy:
        src: install.ini
        dest: /export/release_tar
        owner: admin
        group: admin
        mode: preserve
    - name: "Installing the rootfs for new release"
      shell: tscli --testdev node install-rootfs --release {{ release }}.tar.gz
      become: yes
      become_user: admin
      args:
        chdir: /export/release_tar/
    - name: "Pause for a few minutes to allow reboot"
      pause:
        minutes: 2

# install TS
- name: "Configure the instance with ThoughtSpot"
  hosts: tsinstall
  gather_facts: false
  become: true
  become_user: admin
  tasks:
    - name: Wait for the reboot and check status
      wait_for:
        port: 22
        host: "{{ host }}"
        search_regex: OpenSSH
        delay: 10
        timeout: 300
      connection: local
    - name: "Installing the cluster with release {{ release }}"
      shell: tscli cluster create {{ release }}.tar.gz < install.ini
      become: yes
      become_user: admin
      ignore_errors: true
      args:
        chdir: /export/release_tar/
    - name: "Pause for a few minutes to allow cluster startup"
      pause:
        minutes: 1
